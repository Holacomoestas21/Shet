local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/NICKISBAD/Nick-s-Modded-KAVO-Lib/main/Nick'sModdedKavoLib.lua"))()

local Window = Library.CreateLib("Dandy's world", "LightTheme")

local Tab = Window:NewTab("Main/Idk")

local Section = Tab:NewSection("Main")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ScreenGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
 
local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0, 90, 0, 38)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextColor3 = Color3.fromRGB(248, 248, 248)
Toggle.TextSize = 28.000
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)
 
local Corner = Instance.new("UICorner")
Corner.Name = "Corner"
Corner.Parent = Toggle



Section:NewButton("ESP Twisteds", "ButtonInfo",
function()
    local function addHighlightToMonsters()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    
    if currentRoom then
        for _, model in pairs(currentRoom:GetChildren()) do
            local monstersFolder = model:FindFirstChild("Monsters")
            if monstersFolder then
                for _, monster in pairs(monstersFolder:GetChildren()) do
                    if monster:IsA("Model") and not monster:FindFirstChildOfClass("Highlight") then
                        local highlight = Instance.new("Highlight")
                        highlight.FillColor = Color3.fromRGB(255, 165, 0) -- Color naranja
                        highlight.OutlineColor = Color3.fromRGB(255, 165, 0) -- Borde naranja
                        highlight.Parent = monster
                    end
                end
            end
        end
    end
end

addHighlightToMonsters()

while true do
    wait(20)
    addHighlightToMonsters()
end

    print("Clicked")
end)


Section:NewButton("Boost yourself/heal(Shelly, Sprout)", "ButtonInfo",
function()
    local args = {
    [1] = game:GetService("Players").LocalPlayer.Character,
    [2] = CFrame.new(-179.29843139648438, 146.2311248779297, -164.61495971679688) * CFrame.Angles(3.1415927410125732, 0.4017193913459778, -3.141592502593994),
    [3] = game:GetService("Players").LocalPlayer.Character
}

game:GetService("ReplicatedStorage").Events.AbilityEvent:InvokeServer(unpack(args))
    print("Clicked")
end)


Section:NewButton("Auto Grab Bandage/Medkit", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Función para teletransportar al jugador y activar el ProximityPrompt
local function teleportAndActivatePrompt(model)
    -- Teletransportar al jugador al modelo
    humanoidRootPart.Position = model.PrimaryPart.Position
    
    -- Buscar la parte llamada Prompt dentro del modelo
    local promptPart = model:FindFirstChild("Prompt")
    if promptPart and promptPart:IsA("Part") then
        -- Buscar el ProximityPrompt dentro de Prompt
        local proximityPrompt = promptPart:FindFirstChild("ProximityPrompt")
        if proximityPrompt and proximityPrompt:IsA("ProximityPrompt") then
            -- Activar el ProximityPrompt para que el jugador pueda interactuar con él
            proximityPrompt.Enabled = true
        end
    end
end

-- Función para buscar y teletransportar al jugador a los modelos HealthKit y Bandage
local function findAndTeleportToItems()
    -- Buscar la carpeta CurrentRoom en Workspace
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    if not currentRoom or not currentRoom:IsA("Folder") then
        warn("No se encontró la carpeta CurrentRoom.")
        return
    end
    
    -- Buscar un modelo dentro de CurrentRoom
    local model = currentRoom:FindFirstChildWhichIsA("Model")
    if not model then
        warn("No se encontró ningún modelo en CurrentRoom.")
        return
    end
    
    -- Buscar la carpeta Items dentro del modelo
    local itemsFolder = model:FindFirstChild("Items")
    if not itemsFolder or not itemsFolder:IsA("Folder") then
        warn("No se encontró la carpeta Items en el modelo.")
        return
    end
    
    -- Buscar los modelos HealthKit y Bandage
    local healthKit = itemsFolder:FindFirstChild("HealthKit")
    local bandage = itemsFolder:FindFirstChild("Bandage")
    
    -- Si se encuentra el HealthKit, teletransportar al jugador y activar su ProximityPrompt
    if healthKit and healthKit:IsA("Model") and healthKit.PrimaryPart then
        teleportAndActivatePrompt(healthKit)
    else
        warn("No se encontró el modelo HealthKit.")
    end
    
    -- Si se encuentra el Bandage, teletransportar al jugador y activar su ProximityPrompt
    if bandage and bandage:IsA("Model") and bandage.PrimaryPart then
        teleportAndActivatePrompt(bandage)
    else
        warn("No se encontró el modelo Bandage.")
    end
end

-- Bucle para repetir la función cada 2 segundos
while true do
    findAndTeleportToItems() -- Ejecutar la búsqueda y el teletransporte
    wait(2) -- Esperar 2 segundos antes de repetir
end
    print("Clicked")
end)


Section:NewButton("Follow Player", "Credits to who made it", 
function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/ScpGuest666/Random-Roblox-script/refs/heads/main/Roblox%20follow%20player%20script'))()
    print("Clicked")
end)


Section:NewButton("Auto Use Active Ability", "ButtonInfo",
function()
    local function invokeAbilityEvent()
    local args = {
        [1] = game:GetService("Players").LocalPlayer.Character,
        [2] = CFrame.new(-65.78115844726562, 145.7693634033203, 86.53424072265625) * CFrame.Angles(4.4136689858476075e-09, 2.9576958503043716e-16, 5.338084818617972e-08),
        [3] = false
    }
    game:GetService("ReplicatedStorage").Events.AbilityEvent:InvokeServer(unpack(args))
end

-- Bucle para repetir la ejecución del evento cada 0.3 segundos
while true do
    invokeAbilityEvent() -- Ejecutar la función que invoca el evento
    wait(0.3) -- Esperar 0.3 segundos antes de repetir
end
    print("Clicked")
end)


Section:NewButton("Auto use Bandage/Medkit", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local playerName = player.Name

-- Función para ejecutar el evento
local function useItem(itemName)
    local args = {
        [1] = player.Character, -- Asume que el personaje está cargado
        [2] = game:GetService("MarketplaceService")[itemName] -- Usar el item del Marketplace
    }
    game:GetService("ReplicatedStorage").Events.ItemEvent:InvokeServer(unpack(args))
end

-- Función para buscar en InGamePlayers y activar el item si es necesario
local function checkAndUseItems()
    -- Buscar la carpeta InGamePlayers en Workspace
    local inGamePlayers = workspace:FindFirstChild("InGamePlayers")
    if not inGamePlayers or not inGamePlayers:IsA("Folder") then
        warn("No se encontró la carpeta InGamePlayers.")
        return
    end
    
    -- Buscar un modelo con el nombre del jugador dentro de InGamePlayers
    local playerModel = inGamePlayers:FindFirstChild(playerName)
    if not playerModel or not playerModel:IsA("Model") then
        warn("No se encontró el modelo del jugador en InGamePlayers.")
        return
    end
    
    -- Buscar el humanoide del jugador para verificar la salud
    local humanoid = playerModel:FindFirstChildOfClass("Humanoid")
    if not humanoid then
        warn("No se encontró el Humanoid en el modelo del jugador.")
        return
    end
    
    -- Verificar si la vida del humanoide es 2 o 1
    if humanoid.Health <= 2 then
        -- Buscar la carpeta Items Inventory dentro del modelo
        local itemsInventory = playerModel:FindFirstChild("Items Inventory")
        if not itemsInventory or not itemsInventory:IsA("Folder") then
            warn("No se encontró la carpeta Items Inventory en el modelo del jugador.")
            return
        end
        
        -- Contar los StringValues dentro de Items Inventory
        local itemCount = 0
        local itemsToCheck = {"HealthKit", "Bandage"}
        for _, item in ipairs(itemsInventory:GetChildren()) do
            if item:IsA("StringValue") then
                itemCount = itemCount + 1
                -- Verificar si el StringValue es un HealthKit o Bandage
                if table.find(itemsToCheck, item.Value) then
                    -- Ejecutar el evento con el item correspondiente
                    useItem(item.Value)
                    return -- Para que no siga buscando después de usar el item
                end
            end
        end
        
        -- Asegurarse de que haya al menos 3 StringValues (esto es opcional)
        if itemCount < 3 then
            warn("No hay suficientes items en el inventario.")
            return
        end
    end
end

-- Bucle para repetir la verificación continuamente
while true do
    checkAndUseItems() -- Verificar los items y usar si es necesario
    wait(0.5) -- Esperar 2 segundos antes de volver a verificar
end
    print("Clicked")
end)


Section:NewButton("ESP Items", "ButtonInfo",
function()
    local function addHighlightToItems()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    
    if currentRoom then
        for _, model in pairs(currentRoom:GetChildren()) do
            if model:IsA("Model") then
                local itemsFolder = model:FindFirstChild("Items") -- Con mayúscula
                if itemsFolder then
                    for _, item in pairs(itemsFolder:GetChildren()) do
                        if item:IsA("Model") and not item:FindFirstChildOfClass("Highlight") then
                            local highlight = Instance.new("Highlight")
                            highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Color verde
                            highlight.OutlineColor = Color3.fromRGB(0, 255, 0) -- Borde verde
                            highlight.Parent = item
                        end
                    end
                end
            end
        end
    end
end

addHighlightToItems()

while true do
    wait(15)
    addHighlightToItems()
end

    print("Clicked")
end)


Section:NewButton("Remove SkillCheck", "ButtonInfo",
function()
    game.LocalPlayer.PlayerGui.ScreenGui.Menu.SkillCheckFrame:Destroy()
    print("Clicked")
end)


Section:NewButton("Destroy Dev door", "ButtonInfo",
function()
    workspace.DevDoor:Destroy()
wait(1)
workspace.DevDoor2:Destroy()
    print("Clicked")
end)



Section:NewButton("Float(Not made by me)", "ButtonInfo",
function()
    loadstring(game:HttpGet("https://pastebin.com/raw/PDdkDsgy"))()
    print("Clicked")
end)



Section:NewButton("ESP Machines", "ButtonInfo",
function()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")

if currentRoom then
    for _, item in pairs(currentRoom:GetChildren()) do
        if item:IsA("Model") then
            local generatorsFolder = item:FindFirstChild("Generators")

            if generatorsFolder then
                for _, generator in pairs(generatorsFolder:GetChildren()) do
                    if generator:IsA("Model") then
                        local highlight = Instance.new("Highlight")
                        highlight.Parent = generator
                        highlight.FillColor = Color3.new(1, 1, 0)
                        highlight.FillTransparency = 0.5
                    end
                end
            end
        end
    end
end
    print("Clicked")
end)


Section:NewButton("Teleport to a Machine", "ButtonInfo",
function()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if currentRoom then
    for _, item in pairs(currentRoom:GetChildren()) do
        if item:IsA("Model") then
            local generatorsFolder = item:FindFirstChild("Generators")

            if generatorsFolder then
                local generators = {}
                
                for _, generator in pairs(generatorsFolder:GetChildren()) do
                    if generator:IsA("Model") then
                        table.insert(generators, generator)
                    end
                end
                
                if #generators > 0 then
                    local randomGenerator = generators[math.random(1, #generators)]
                    character:SetPrimaryPartCFrame(randomGenerator:GetModelCFrame())
                end
            end
        end
    end
end
    print("Clicked")
end)



local Tab2 = Window:NewTab("Visuals")
local Section2 = Tab2:NewSection("Visuals/Good Features")
Section2:NewButton("Funny twisteds", "ButtonInfo",
function()
    loadstring(game:HttpGet("https://pastebin.com/raw/JhdK4Z3k"))();
    print("Clicked")
end)



Section2:NewButton("Semi Auto machines GUI(Use Auto Skill Check)", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "Hex233222 Control"
screenGui.Parent = playerGui

-- Create the main Frame (the window with the button)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 100)
mainFrame.Position = UDim2.new(0.5, -100, 0.5, -50) -- Centered on the screen
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White
mainFrame.BorderSizePixel = 2
mainFrame.Parent = screenGui

-- Create a title for the GUI
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Hex233222 Control"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black text
titleLabel.Parent = mainFrame

-- Create toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, 0, 0.5, 0)
toggleButton.Position = UDim2.new(0, 0, 0.3, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green for on
toggleButton.Text = "Turn On"
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Parent = mainFrame

-- Create close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.2, 0, 0.3, 0)
closeButton.Position = UDim2.new(0.8, 0, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red for close
closeButton.Text = "X"
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = mainFrame

-- Variable to control if the script is active
local scriptEnabled = false
local mainLoopCoroutine

-- Function to execute or stop the script
local function toggleScript()
    if scriptEnabled then
        -- Turn off the script
        scriptEnabled = false
        toggleButton.Text = "Turn On"
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green for on

        -- Stop the main loop
        if mainLoopCoroutine then
            coroutine.close(mainLoopCoroutine)
        end

    else
        -- Turn on the script
        scriptEnabled = true
        toggleButton.Text = "Turn Off"
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red for off

        -- Run the script in an independent loop
        mainLoopCoroutine = coroutine.create(function()
            local elevatorsFolder = game.Workspace:FindFirstChild("Elevators")
            local currentRoomFolder = game.Workspace:FindFirstChild("CurrentRoom")
            local character = player.Character or player.CharacterAdded:Wait()
            local isBeingChased = false
            local lastGeneratorUsed = nil

            local function teleportToDoorHitbox()
                if elevatorsFolder then
                    local elevatorModel = elevatorsFolder:FindFirstChild("Elevator")
                    if elevatorModel then
                        local doorHitbox = elevatorModel:FindFirstChild("DoorHitbox")
                        if doorHitbox then
                            -- Teleport the player to the DoorHitbox part
                            character:SetPrimaryPartCFrame(doorHitbox.CFrame + Vector3.new(0, 50, 0))
                        end
                    end
                end
            end

            local function findBestGenerator()
                if not currentRoomFolder then return nil end
                local bestGenerator = nil
                local lowestAmount = math.huge

                for _, room in pairs(currentRoomFolder:GetChildren()) do
                    if room:IsA("Model") then
                        local generatorsFolder = room:FindFirstChild("Generators")

                        if generatorsFolder then
                            for _, generator in pairs(generatorsFolder:GetChildren()) do
                                if generator:IsA("Model") and generator ~= lastGeneratorUsed then
                                    local statsFolder = generator:FindFirstChild("Stats")
                                    if statsFolder then
                                        local currentAmount = statsFolder:FindFirstChild("CurrentAmount")
                                        if currentAmount and currentAmount:IsA("NumberValue") and currentAmount.Value < lowestAmount then
                                            bestGenerator = generator
                                            lowestAmount = currentAmount.Value
                                        end
                                    end
                                end
                            end
                        end
                    end
                end

                return bestGenerator
            end

            local function teleportToGenerator(generator)
                if generator then
                    local lightPart = generator:FindFirstChild("Light")
                    if lightPart and lightPart:IsA("BasePart") then
                        character:SetPrimaryPartCFrame(lightPart.CFrame)
                        wait(0.01)
                    else
                        return false
                    end

                    local promptPart = generator:FindFirstChild("Prompt")
                    if promptPart and promptPart:IsA("BasePart") then
                        local proximityPrompt = promptPart:FindFirstChild("ProximityPrompt")
                        if proximityPrompt and proximityPrompt:IsA("ProximityPrompt") then
                            for i = 1, 3 do
                                fireproximityprompt(proximityPrompt)
                                wait(0.01)
                            end
                        else
                            return false
                        end
                    else
                        return false
                    end
                end
                lastGeneratorUsed = generator
                return true
            end

            local function monitorAllMonsters()
                for _, room in pairs(currentRoomFolder:GetChildren()) do
                    local monstersFolder = room:FindFirstChild("Monsters")
                    if monstersFolder then
                        for _, monster in pairs(monstersFolder:GetChildren()) do
                            local chaserScript = monster:FindFirstChild("Chaser")
                            if chaserScript then
                                local chasingValue = chaserScript:FindFirstChild("Chasing")
                                if chasingValue and chasingValue:IsA("BoolValue") then
                                    chasingValue.Changed:Connect(function(newValue)
                                        if newValue == true and not isBeingChased then
                                            isBeingChased = true
                                            while chasingValue.Value == true do
                                                teleportToDoorHitbox()
                                                wait(0.01)
                                            end
                                            wait(8)
                                            isBeingChased = false
                                        end
                                    end)
                                end
                            end
                        end
                    end
                end
            end

            local function mainLoop()
                while scriptEnabled do
                    if not isBeingChased then
                        monitorAllMonsters()

                        local bestGenerator = findBestGenerator()
                        if bestGenerator then
                            local success = teleportToGenerator(bestGenerator)
                            if success then
                                wait(0.3)  -- Avoid flooding the system
                            end
                        end
                    end
                    wait(0.3)
                end
            end

            mainLoop()
        end)

        -- Start the coroutine
        coroutine.resume(mainLoopCoroutine)
    end
end

-- Function to close the GUI
local function closeGui()
    screenGui:Destroy()
end

-- Connect the button to turn on/off
toggleButton.MouseButton1Click:Connect(toggleScript)

-- Connect the button to close
closeButton.MouseButton1Click:Connect(closeGui)

-- Function to drag the GUI
local dragging
local dragInput
local dragStart
local startPos

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
    print("Clicked")
end)



Section2:NewButton("Get Research", "ButtonInfo",
function()
    local currentRoomFolder = game.Workspace:FindFirstChild("CurrentRoom")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local isTeleportingToMonsters = false

-- Función para teletransportar al jugador sobre los monstruos
local function teleportToMonsters(monstersFolder)
    if monstersFolder then
        for _, monster in pairs(monstersFolder:GetChildren()) do
            if monster:IsA("Model") and monster.PrimaryPart then
                local abovePosition = monster.PrimaryPart.Position + Vector3.new(0, 20, 0)  -- Teletransportar 20 unidades más arriba del monstruo
                character:SetPrimaryPartCFrame(CFrame.new(abovePosition))  -- Teletransportar al jugador
                wait(0.5)  -- Pequeño retraso entre teletransportes
            end
        end
        isTeleportingToMonsters = false  -- Termina la teletransportación
    end
end

-- Función para buscar la carpeta Monsters y teletransportar al jugador
local function searchForMonstersAndTeleport()
    if currentRoomFolder then
        for _, room in pairs(currentRoomFolder:GetChildren()) do
            if room:IsA("Model") then
                local monstersFolder = room:FindFirstChild("Monsters")
                if monstersFolder then
                    isTeleportingToMonsters = true  -- Empieza la teletransportación
                    teleportToMonsters(monstersFolder)  -- Teletransportar al jugador sobre los monstruos
                    break
                end
            end
        end
    end
end

-- Función principal para activar el teletransporte
local function startTeleportingToMonsters()
    searchForMonstersAndTeleport()
end

-- Llamar la función para iniciar el teletransporte
startTeleportingToMonsters()
    print("Clicked")
end)


Section2:NewButton("Lobotomy Script", "ButtonInfo",
function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Slendyvn/Dandy-script/refs/heads/main/E"))()
    print("Clicked")
end)



Section2:NewButton("Enable Jump(GUI)", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Crear GUI principal
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "Hex233222 Jump Enabler"
screenGui.Parent = playerGui

-- Crear el Frame principal (la ventana arrastrable)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 100)
mainFrame.Position = UDim2.new(0.5, -100, 0.5, -50) -- Centrado en la pantalla
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Blanco
mainFrame.BorderSizePixel = 2
mainFrame.Visible = true -- Inicialmente visible
mainFrame.Parent = screenGui

-- Crear un título para el GUI
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Hex233222 Jump Enabler"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Texto negro
titleLabel.Parent = mainFrame

-- Crear botón para habilitar el salto
local jumpButton = Instance.new("TextButton")
jumpButton.Size = UDim2.new(1, 0, 0.35, 0)
jumpButton.Position = UDim2.new(0, 0, 0.3, 0)
jumpButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
jumpButton.Text = "Enable Jump"
jumpButton.Font = Enum.Font.SourceSansBold
jumpButton.TextSize = 18
jumpButton.Parent = mainFrame

-- Crear botón para deshabilitar el salto
local disableJumpButton = Instance.new("TextButton")
disableJumpButton.Size = UDim2.new(1, 0, 0.35, 0)
disableJumpButton.Position = UDim2.new(0, 0, 0.65, 0)
disableJumpButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
disableJumpButton.Text = "Disable Jump"
disableJumpButton.Font = Enum.Font.SourceSansBold
disableJumpButton.TextSize = 18
disableJumpButton.Parent = mainFrame

-- Crear un botón para cerrar el GUI
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -25, 0, 5) -- Arriba a la derecha del Frame
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = "X"
closeButton.TextScaled = true
closeButton.Parent = mainFrame

-- Habilitar el salto
jumpButton.MouseButton1Click:Connect(function()
    humanoid.JumpPower = 16 -- Establecer una potencia de salto estándar
end)

-- Deshabilitar el salto
disableJumpButton.MouseButton1Click:Connect(function()
    humanoid.JumpPower = 0 -- Deshabilitar el salto
end)

-- Funcionalidad para cerrar el GUI
closeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false -- Oculta el GUI al presionar el botón cerrar
end)

-- Crear un botón fuera del GUI para abrirlo nuevamente
local openButton = Instance.new("TextButton")
openButton.Size = UDim2.new(0, 100, 0, 50)
openButton.Position = UDim2.new(0.5, -50, 0.9, -25) -- Cerca de la parte inferior de la pantalla
openButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
openButton.Text = "Open GUI"
openButton.TextScaled = true
openButton.Parent = screenGui

-- Funcionalidad para abrir el GUI
openButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true -- Muestra el GUI nuevamente
end)

-- Funcionalidad de arrastrar el GUI
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
    print("Clicked")
end)


Section2:NewButton("Change Walkspeed (GUI)", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Crear GUI principal
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "Hex233222 Speed Changer"
screenGui.Parent = playerGui

-- Crear el Frame principal (la ventana arrastrable)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 250, 0, 150)
mainFrame.Position = UDim2.new(0.5, -125, 0.5, -75) -- Centrado en la pantalla
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Blanco
mainFrame.BorderSizePixel = 2
mainFrame.Visible = true -- Inicialmente visible
mainFrame.Parent = screenGui

-- Crear un título para el GUI
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0.2, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Hex233222 Speed Changer"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Texto negro
titleLabel.Parent = mainFrame

-- Crear el Slider para ajustar la distancia de teleportación
local slider = Instance.new("TextButton")
slider.Size = UDim2.new(1, 0, 0.2, 0)
slider.Position = UDim2.new(0, 0, 0.3, 0)
slider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
slider.Text = "Adjust Teleport Distance"
slider.Font = Enum.Font.SourceSans
slider.TextSize = 18
slider.Parent = mainFrame

local currentDistanceLabel = Instance.new("TextLabel")
currentDistanceLabel.Size = UDim2.new(1, 0, 0.2, 0)
currentDistanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
currentDistanceLabel.BackgroundTransparency = 1
currentDistanceLabel.Text = "Teleport Distance: 1"
currentDistanceLabel.Font = Enum.Font.SourceSans
currentDistanceLabel.TextSize = 18
currentDistanceLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Texto negro
currentDistanceLabel.Parent = mainFrame

-- Crear un botón para cerrar el GUI
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -25, 0, 5) -- Arriba a la derecha del Frame
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = "X"
closeButton.TextScaled = true
closeButton.Parent = mainFrame

-- Funcionalidad para cerrar el GUI
closeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false -- Oculta el GUI al presionar el botón cerrar
end)

-- Variables para teleportar al jugador
local minDistance = 0.5
local maxDistance = 5
local teleportDistance = minDistance
local teleportSpeed = 0.05 -- Hacemos el tiempo entre teletransportes más rápido

-- Función para teletransportar al jugador cuando se mueve
local function teleportPlayer()
    local moveDirection = humanoid.MoveDirection
    if moveDirection.Magnitude > 0 then
        -- Calcular la nueva posición de teletransporte
        local newPosition = humanoidRootPart.Position + moveDirection.Unit * teleportDistance
        
        -- Girar al jugador en la dirección de movimiento
        local newCFrame = CFrame.new(newPosition, newPosition + moveDirection)
        humanoidRootPart.CFrame = newCFrame
    end
end

-- Ajustar la distancia de teletransporte con el slider
slider.MouseButton1Click:Connect(function()
    teleportDistance = teleportDistance + 0.5
    if teleportDistance > maxDistance then
        teleportDistance = minDistance
    end
    currentDistanceLabel.Text = "Teleport Distance: " .. teleportDistance
end)

-- Función que ejecuta la teletransportación constantemente
local function startTPWalk()
    while true do
        teleportPlayer()
        wait(teleportSpeed) -- Aumenta la velocidad de la teletransportación
    end
end

-- Iniciar el TPWalk en un bucle
spawn(startTPWalk)

-- Funcionalidad de arrastrar el GUI
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
    print("Clicked")
end)



Section2:NewButton("Fake Dandy", "ButtonInfo",
function()
    local args = {
    [1] = "Dandy"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Voted"):InvokeServer(unpack(args))
    print("Clicked")
end)



Section2:NewButton("Auto GTE", "ButtonInfo",
function()
    loadstring(game:HttpGet("https://pastebin.com/raw/A8j6QYfT"))();
    print("Clicked")
end)


Section2:NewButton("Auto Distract use in elevator and use inf yield", "Then put god mode after executing(Dont leave elevator)",
function()
    loadstring(game:HttpGet("https://pastebin.com/raw/VsN2mKb1"))();
    print("Clicked")
end)


Section2:NewButton("New Float", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Crear la GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FloatControlGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 100, 0, 200)
frame.Position = UDim2.new(1, -110, 0.5, -100) -- A la derecha de la pantalla
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Parent = screenGui

-- Flecha hacia arriba
local upButton = Instance.new("TextButton")
upButton.Size = UDim2.new(1, 0, 0.33, 0)
upButton.Position = UDim2.new(0, 0, 0, 0)
upButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
upButton.Text = "↑"
upButton.Font = Enum.Font.SourceSans
upButton.TextSize = 40
upButton.Parent = frame

-- Botón para detener
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(1, 0, 0.34, 0)
stopButton.Position = UDim2.new(0, 0, 0.33, 0)
stopButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0) -- Color amarillo
stopButton.Text = "■"
stopButton.Font = Enum.Font.SourceSans
stopButton.TextSize = 40
stopButton.Parent = frame

-- Flecha hacia abajo
local downButton = Instance.new("TextButton")
downButton.Size = UDim2.new(1, 0, 0.33, 0)
downButton.Position = UDim2.new(0, 0, 0.67, 0)
downButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
downButton.Text = "↓"
downButton.Font = Enum.Font.SourceSans
downButton.TextSize = 40
downButton.Parent = frame

-- Crear una plataforma visual
local platform = Instance.new("Part")
platform.Size = Vector3.new(10, 1, 10) -- Tamaño de la plataforma
platform.Position = Vector3.new(0, 0, 0) -- Se posicionará bajo el jugador
platform.Anchored = true
platform.CanCollide = true
platform.BrickColor = BrickColor.new("Bright red") -- Color de la plataforma
platform.Parent = workspace

-- Crear el Highlight para la plataforma
local highlight = Instance.new("Highlight")
highlight.Adornee = platform
highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Color rojo para el Highlight
highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- Bordes blancos
highlight.Parent = platform

-- Variables para controlar el movimiento
local floatingHeight = 2 -- Altura de flotación inicial
local floatingSpeed = 1 -- Velocidad de flotación
local isMoving = true -- Variable para controlar si la plataforma se mueve

-- Función para mover la plataforma y al jugador
local function updatePlatformPosition()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Actualiza la posición de la plataforma bajo el jugador
    platform.Position = humanoidRootPart.Position - Vector3.new(0, humanoidRootPart.Size.Y / 2 + 0.5 - floatingHeight, 0)
end

-- Conectar eventos de los botones
upButton.MouseButton1Click:Connect(function()
    floatingHeight = floatingHeight + floatingSpeed -- Aumentar la altura
    updatePlatformPosition() -- Actualiza la posición de la plataforma
end)

downButton.MouseButton1Click:Connect(function()
    floatingHeight = floatingHeight - floatingSpeed -- Disminuir la altura
    updatePlatformPosition() -- Actualiza la posición de la plataforma
end)

stopButton.MouseButton1Click:Connect(function()
    isMoving = not isMoving -- Cambia el estado de movimiento
    updatePlatformPosition() -- Actualiza la posición al detenerse
end)

-- Bucle para actualizar la posición de la plataforma en función del jugador
while true do
    if isMoving then
        updatePlatformPosition() -- Asegura que la plataforma siga al jugador
    end
    wait(0.1) -- Espera un momento antes de la próxima actualización
end
    print("Clicked")
end)



Section2:NewTextBox("Made by hex233222", "Hi y'all", function(txt)
	print(txt)
end)


Section2:NewLabel("Discord Link for updates:https://discord.gg/P4GZnPkK")


local Tab3 = Window:NewTab("(Detected)")

local Section3 = Tab3:NewSection("DreamSkins")
Section3:NewButton("Dream Astro", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "DreamAstro"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section3:NewButton("Dream Sprout", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "DreamSprout"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section3:NewButton("Dream Vee", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "DreamVee"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section3:NewButton("Dream Shelly", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "DreamShelly"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)


Section3:NewButton("Dream Pebble", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "DreamPebble"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



local Section4 = Tab3:NewSection("Vintage Skins")


Section4:NewButton("Vintage Boxten", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageBoxten"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Poppy", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintagePoppy"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Toodles", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageToodles"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Tisha", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageTisha"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Finn", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageFinn"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Cosmo", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageCosmo"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Brightney", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageBrightney"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Gigi", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageGigi"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Glisten", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageGlisten"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Teagan", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageTeagan"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Rodger", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageRodger"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Razzle and dazzle", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageRazzleDazzle"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Goob", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageGoob"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Scraps", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageScraps"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Shrimpo", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageShrimpo"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Flutter", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageFlutter"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Astro", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageAstro"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Vee", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageVee"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Sprout", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageSprout"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)



Section4:NewButton("Vintage Shelly", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintageShelly"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)




Section4:NewButton("Vintage Pebble", "ButtonInfo",
function()
    local args = {
    [1] = "Gacha1",
    [2] = "VintagePebble"
}

game:GetService("ReplicatedStorage").BuySkin:InvokeServer(unpack(args))
    print("Clicked")
end)


local Tab4 = Window:NewTab("ClientSideds")

local Section4 = Tab4:NewSection("Dandy")

Section4:NewButton("ClientSidedDandy", "Pls use Boxten, maded by Craze",
function()
    loadstring(game:HttpGet("https://pastebin.com/raw/LrGDCr7Z"))()
    print("Clicked")
end)

Section4:NewButton("Client-Sided Twisted(By me)", "Use Flutter",
function()
    local player = game.Players.LocalPlayer
local playerName = player.Name
local workspace = game.Workspace
local targetFolder = workspace:FindFirstChild("InGamePlayers")

if targetFolder then
    local playerModel = targetFolder:FindFirstChild(playerName)
    
    if playerModel then
        -- Cambiar la textura de la parte de la cabeza (Head)
        local headPart = playerModel:FindFirstChild("Head", true)
        if headPart and headPart:IsA("MeshPart") then
            headPart.TextureID = "rbxassetid://18239766353"
            print("Texture ID cambiado para la parte de la cabeza.")
        else
            warn("No se encontró un MeshPart llamado 'Head'.")
        end

        -- Cambiar la textura de las antenas (AntL y AntR)
        local antL = playerModel:FindFirstChild("AntL", true)
        local antR = playerModel:FindFirstChild("AntR", true)
        
        if antL and antL:IsA("MeshPart") then
            antL.TextureID = "rbxassetid://18239751810"
            print("Texture ID cambiado para AntL.")
        else
            warn("No se encontró un MeshPart llamado 'AntL'.")
        end

        if antR and antR:IsA("MeshPart") then
            antR.TextureID = "rbxassetid://18239751810"
            print("Texture ID cambiado para AntR.")
        else
            warn("No se encontró un MeshPart llamado 'AntR'.")
        end

        -- Cambiar la textura del cuerpo (Body)
        local bodyPart = playerModel:FindFirstChild("Body", true)
        if bodyPart and bodyPart:IsA("MeshPart") then
            bodyPart.TextureID = "rbxassetid://18239766353"
            print("Texture ID cambiado para el cuerpo (Body).")
        else
            warn("No se encontró un MeshPart llamado 'Body'.")
        end

        -- Cambiar el MeshId y la TextureId del ala izquierda (WingL)
        local wingL = playerModel:FindFirstChild("WingL", true)
        if wingL and wingL:IsA("MeshPart") then
            wingL.MeshId = "rbxassetid://18239759720"
            wingL.TextureID = "rbxassetid://18239766353"
            print("Mesh ID y Texture ID cambiados para WingL.")
        else
            warn("No se encontró un MeshPart llamado 'WingL'.")
        end

        -- Cambiar el MeshId y la TextureId del ala derecha (WingR)
        local wingR = playerModel:FindFirstChild("WingR", true)
        if wingR and wingR:IsA("MeshPart") then
            wingR.MeshId = "rbxassetid://18239760883"
            wingR.TextureID = "rbxassetid://18239766353"
            print("Mesh ID y Texture ID cambiados para WingR.")
        else
            warn("No se encontró un MeshPart llamado 'WingR'.")
        end
    else
        warn("No se encontró un modelo con el nombre del jugador.")
    end
else
    warn("No se encontró la carpeta 'InGamePlayers' en Workspace.")
end
    print("Clicked")
end)



local Tab5 = Window:NewTab("Detected)")

local Section5 = Tab5:NewSection("StarterToons")

Section5:NewButton("Astro", "These are made by roder.",
function()
    local args = {
    [1] = "Astro"
}

game:GetService("ReplicatedStorage"):WaitForChild("EarnTutorialTower"):InvokeServer(unpack(args))
    print("Clicked")
end)

Section5:NewButton("Vee", "ButtonInfo",
function()
    local args = {
    [1] = "Vee"
}

game:GetService("ReplicatedStorage"):WaitForChild("EarnTutorialTower"):InvokeServer(unpack(args))
    print("Clicked")
end)

Section5:NewButton("Shelly", "ButtonInfo",
function()
    local args = {
    [1] = "Shelly"
}

game:GetService("ReplicatedStorage"):WaitForChild("EarnTutorialTower"):InvokeServer(unpack(args))
    print("Clicked")
end)

Section5:NewButton("Sprout", "ButtonInfo", 
function()
    local args = {
    [1] = "Sprout"
}

game:GetService("ReplicatedStorage"):WaitForChild("EarnTutorialTower"):InvokeServer(unpack(args))
    print("Clicked")
end)

Section5:NewButton("Pebble", "ButtonInfo",
function()
    local args = {
    [1] = "Pebble"
}

game:GetService("ReplicatedStorage"):WaitForChild("EarnTutorialTower"):InvokeServer(unpack(args))
    print("Clicked")
end)



local Tab7 = Window:NewTab("FE Animations")
local Section7 = Tab7:NewSection("Toons Animations")

Section7:NewButton("Shrimpo Extract/Decode", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17561277632"

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section7:NewButton("Flutter Ability", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Cargar y reproducir la animación
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18226927388"  -- ID de la animación

local animationTrack = humanoid:LoadAnimation(animation)
animationTrack:Play()
    print("Clicked")
end)


Section7:NewButton("Boxten Wave", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17059625743"

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section7:NewButton("Shelly Dance", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18199567889"

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


local Section8 = Tab7:NewSection("Twisted Animations")


Section8:NewButton("RazzleDazzle Sit", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18989418012"

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)



Section8:NewButton("Flutter Chase", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18239928544"

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)



Section8:NewButton("Twisted Rodger Walk", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18988824994"

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section8:NewButton("Twisted Toodles Run", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://91029796934547"  -- Reemplaza con el ID deseado

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section8:NewButton("Gigi Run", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://124691439016513"  -- Reemplaza con el ID deseado

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)



Section7:NewButton("Vee ability", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17294852934"  -- Reemplaza con el ID deseado

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section8:NewButton("What is this", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17516071317"  -- ID de la animación

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section8:NewButton("Boxten Run(Use with Shrimpo)", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17174260770"  -- ID de la animación

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section8:NewButton("Twisted AstroAttack", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Cargar y reproducir la animación
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17617839395"  -- ID de la animación

local animationTrack = humanoid:LoadAnimation(animation)
animationTrack:Play()
    print("Clicked")
end)



Section7:NewButton("Glisten Walk", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18789278688"  -- ID de la animación

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)


Section7:NewButton("Dandy Extract", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Esperar a que el Humanoid esté disponible
local humanoid = character:WaitForChild("Humanoid")

-- Crear una nueva instancia de Animation
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://16496852675"  -- ID de la animación

-- Cargar la animación en el Humanoid
local animationTrack = humanoid:LoadAnimation(animation)

-- Reproducir la animación
animationTrack:Play()
    print("Clicked")
end)

Section8:NewButton("Scraps Attack", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- ID de la animación
local animationId = "rbxassetid://18989193580"

-- Función para reproducir la animación
local function playAnimation()
    local animation = Instance.new("Animation")
    animation.AnimationId = animationId
    local animationTrack = humanoid:LoadAnimation(animation)
    animationTrack:Play() -- Reproducir la animación
end

-- Reproducir la animación
playAnimation()
    print("Clicked")
end)


local Tab9 = Window:NewTab("Lobby TP")
local Section9 = Tab9:NewSection("Lobby TP")
Section9:NewButton("TP To Skin Summon", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Definir el nombre de la carpeta a buscar
local folderName = "RevealRoom"  -- Cambia esto al nombre de la carpeta que buscas
local targetMeshPartName = "CurtainL"   -- Nombre de la MeshPart a buscar

-- Buscar la carpeta en Workspace
local folder = game.Workspace:FindFirstChild(folderName)

if folder then
    -- Buscar la MeshPart en la carpeta
    local curtainMeshPart = folder:FindFirstChild(targetMeshPartName)

    if curtainMeshPart and curtainMeshPart:IsA("MeshPart") then
        -- Teletransportar al jugador a la MeshPart
        character:SetPrimaryPartCFrame(curtainMeshPart.CFrame)
        print("Jugador teletransportado a CurtainL.")
    else
        warn("MeshPart 'CurtainL' no encontrada en la carpeta.")
    end
else
    warn("Carpeta '" .. folderName .. "' no encontrada en Workspace.")
end
    print("Clicked")
end)


Section9:NewButton("TP To Mastery Room", "ButtonInfo",
function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Nombre del modelo a buscar
local modelName = "Bed"  -- Cambia esto si necesitas otro nombre
local targetMeshPartName = "JackInTheBox"  -- Nombre de la MeshPart a buscar

-- Buscar el modelo en Workspace
local bedModel = game.Workspace:FindFirstChild(modelName)

if bedModel and bedModel:IsA("Model") then
    -- Buscar la MeshPart dentro del modelo
    local jackInTheBox = bedModel:FindFirstChild(targetMeshPartName)

    if jackInTheBox and jackInTheBox:IsA("MeshPart") then
        -- Teletransportar al jugador a la MeshPart
        character:SetPrimaryPartCFrame(jackInTheBox.CFrame)
        print("Jugador teletransportado a JackInTheBox.")
    else
        warn("MeshPart 'JackInTheBox' no encontrada en el modelo 'Bed'.")
    end
else
    warn("Modelo 'Bed' no encontrado en Workspace.")
end
    print("Clicked")
end)
